{"version":3,"sources":["hoc/Axios.js","Store/actions/authintication.js","Store/actions/actionTypes.js","routes.js","Containers/Layout/DefaultLayout.js","App.js","reportWebVitals.js","Store/reducers/authintication.js","index.js"],"names":["instance","axios","create","baseURL","authStart","type","actionTypes","authLoginSuccess","token","userId","authFailed","err","error","resetState","sighUp","name","email","password","confirmPassword","dispatch","data","Axios","post","then","res","msg","console","log","status","message","catch","response","extractErrorMessage","chekcTimeOut","expirationTime","expire_time","clearTimeout","setTimeout","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LogOut","localStorage","removeItem","login","setItem","remainingMilliseconds","expiryDate","Date","getTime","toISOString","success","authCheckState","getItem","setReirectRoute","path","verifiy","setPath","results","map","item","AUTH_START","AUTH_SIGINUP_SUCCESS","AUTH_LOGIN_SUCCESS","AUTH_RESET_STATE","AUTH_FAILED","AUTH_LOGOUT","CHECK_USER","SET_PATH","routes","exact","component","React","lazy","DefaultHeader","Layout","loading","className","Fragment","fallback","this","Container","fluid","route","idx","render","props","from","to","Component","Login","Register","Reset","Home","App","state","redirect","checkSession","isAuthintacted","location","pathname","search","setState","Suspense","connect","auth","actions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","userInfo","pathCallback","reducer","action","userid","user","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authinticationReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90429ae1.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://wfm-toolkit.herokuapp.com/api'\r\n})\r\n\r\n//https://wfm-toolkit.herokuapp.com/login\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport Axios from \"../../hoc/Axios\";\r\nimport { toast } from \"react-toastify\";\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSignupSuccess = (msg) => {\r\n  return {\r\n    type: actionTypes.AUTH_SIGINUP_SUCCESS,\r\n    message: msg,\r\n  };\r\n};\r\n\r\nexport const authLoginSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGIN_SUCCESS,\r\n    token: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const setUserInfo = (user) => {\r\n  return {\r\n    type: actionTypes.CHECK_USER,\r\n    user: user,\r\n  };\r\n};\r\n\r\nexport const authFailed = (err) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAILED,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const resetState = () => {\r\n  return {\r\n    type: actionTypes.AUTH_RESET_STATE,\r\n  };\r\n};\r\n\r\nexport const sighUp = (name, email, password, confirmPassword) => {\r\n  return (dispatch) => {\r\n    let data = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n\r\n    dispatch(authStart());\r\n    Axios.post(\"/auth/signup\", data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          dispatch(authSignupSuccess(res.data.message));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        dispatch(authFailed(extractErrorMessage(err.response.data)[0]));\r\n      });\r\n  };\r\n};\r\n\r\nexport const chekcTimeOut = (expirationTime) => {\r\n  return (dispatch) => {\r\n    let expire_time;\r\n    clearTimeout(expire_time);\r\n    expire_time = setTimeout(() => {\r\n      toast.info(\"Your session has expired\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      dispatch(LogOut());\r\n    }, expirationTime);\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const setPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const LogOut = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiryDate\");\r\n    localStorage.removeItem(\"userId\");\r\n    dispatch(authLogout());\r\n    // dispatch(setPath(null))\r\n  };\r\n};\r\n\r\nexport const login = (email, password) => {\r\n  return (dispatch) => {\r\n    let data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    dispatch(authStart());\r\n    Axios.post(\"/auth/login\", data)\r\n      .then((res) => {\r\n        // console.log(res)\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"userId\", res.data.userId);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(\r\n          new Date().getTime() + remainingMilliseconds\r\n        );\r\n        // console.log(expiryDate)\r\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\r\n        dispatch(authLoginSuccess(res.data.token, res.data.userId));\r\n        dispatch(chekcTimeOut(remainingMilliseconds));\r\n        toast.success(\"Loged in successfully 😊\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        dispatch(authFailed(extractErrorMessage(err.response.data)[0]));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expiryDate = localStorage.getItem(\"expiryDate\");\r\n    if (!token || !expiryDate) {\r\n      return;\r\n    }\r\n    if (new Date(expiryDate) <= new Date()) {\r\n      dispatch(LogOut());\r\n      return;\r\n    }\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const remainingMilliseconds =\r\n      new Date(expiryDate).getTime() - new Date().getTime();\r\n    dispatch(authLoginSuccess(token, userId));\r\n    dispatch(chekcTimeOut(remainingMilliseconds));\r\n  };\r\n};\r\n\r\nexport const user = (token) => {\r\n  return (dispatch) => {\r\n    Axios.post(\"/Authintication/user-info\", null, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user.length <= 0) {\r\n          dispatch(LogOut());\r\n        }\r\n        dispatch(setUserInfo(res.data.user[0]));\r\n      })\r\n      .catch((err) => dispatch(LogOut()));\r\n  };\r\n};\r\n\r\nexport const setReirectRoute = (path) => {\r\n  const verifiy = path === \"/login\" ? null : path;\r\n  return (dispatch) => {\r\n    dispatch(setPath(verifiy));\r\n  };\r\n};\r\n\r\nconst extractErrorMessage = (err) => {\r\n  return err.results.map((item) => item.msg);\r\n};\r\n","export const AUTH_START = 'AUTH_START'\r\n\r\nexport const AUTH_SIGINUP_SUCCESS = 'AUTH_SIGINUP_SUCCESS'\r\nexport const AUTH_LOGIN_SUCCESS = 'AUTH_LOGIN_SUCCESS'\r\n\r\nexport const AUTH_RESET_STATE = 'AUTH_RESET_STATE'\r\nexport const AUTH_FAILED = 'AUTH_FAILED'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\nexport const AUTH_REDIRECT = 'AUTH_REDIRECT'\r\n\r\n\r\n\r\nexport const CHECK_USER = 'CHECK_USER'\r\nexport const SET_PATH = 'SET_PATH'\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\n// import components and load lazy \r\n\r\n\r\nconst Dashboard = React.lazy(()=> import(\"./Containers/Dashboard/index\"));\r\nconst Scheduler = React.lazy(()=> import(\"./Containers/Schduler/Search\"));\r\nconst Calendar = React.lazy(()=> import(\"./Containers/Schduler/Calender\"));\r\nconst Holiday = React.lazy(()=> import(\"./Containers/Holiday/Index\"));\r\nconst Settings = React.lazy(()=> import('./Containers/Settings/Index'))\r\nconst routes = [\r\n    {\r\n      path: \"/home\",\r\n      exact: true,\r\n      name: \"Dashboard\",\r\n      component: Dashboard,\r\n    },\r\n    {\r\n        path: \"/scheduler\",\r\n        exact: true,\r\n        name: \"Scheduler\",\r\n        component: Scheduler,\r\n    },\r\n    {\r\n      path: \"/scheduler/search\",\r\n      exact: true,\r\n      name: \"Calendar\",\r\n      component: Calendar,\r\n    },\r\n    {\r\n      path: \"/holiday/me\",\r\n      exact: true,\r\n      name: \"Holiday\",\r\n      component: Holiday,\r\n    },\r\n    {\r\n      path: \"/setting\",\r\n      exact: true,\r\n      name: \"Settings\",\r\n      component: Settings,\r\n    }\r\n]\r\n\r\n\r\nexport default routes;","import React, { Component, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport routes from \"../../routes\";\r\n\r\nconst DefaultHeader = React.lazy(()=>import('./DefaultHeader'))\r\n\r\nexport default class Layout extends Component {\r\n  loading = () => (\r\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n  );\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Suspense fallback={this.loading()}>\r\n        <DefaultHeader />\r\n        </Suspense>\r\n        <main>\r\n          <Container fluid>\r\n            <Suspense fallback={this.loading()}>\r\n              <Switch>\r\n                {routes.map((route, idx) => {\r\n                  return route.component ? (\r\n                    <Route\r\n                      key={idx}\r\n                      path={route.path}\r\n                      exact={route.exact}\r\n                      name={route.name}\r\n                      render={(props) => {\r\n                        console.log(\"update route =>\", this.props); //update the path\r\n                        return <route.component {...props} />;\r\n                      }}\r\n                    />\r\n                  ) : null;\r\n                })}\r\n                <Redirect\r\n                    from=\"/login\"\r\n                    to={this.props.path ? this.props.path : \"/home\"}\r\n                  />\r\n                  <Redirect from=\"/\" to=\"/home\" />\r\n              </Switch>\r\n            </Suspense>\r\n          </Container>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"./Containers/Layout/DefaultLayout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./Store/actions/index\";\nimport \"./App.css\";\n\nconst Login = React.lazy(() => import(\"./Containers/Authentication/Login\"));\nconst Register = React.lazy(() =>import(\"./Containers/Authentication/Register\"));\nconst Reset =  React.lazy(() =>import(\"./Containers/Authentication/Reset\"))\nconst Home = React.lazy(()=> import('./Containers/Home/index'))\n\nclass App extends Component {\n  state = {\n    redirect: false,\n  };\n\n  componentDidMount() {\n    this.props.checkSession();\n    if (this.props.isAuthintacted !== true) {\n      this.props.setPath(\n        this.props.location.pathname + this.props.location.search\n      );\n      this.setState({\n        redirect: true,\n      });\n    }\n  }\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n  render() {\n    return (\n      <React.Suspense fallback={this.loading()}>\n        <ToastContainer />\n        {this.props.isAuthintacted === true ? (\n          <Route\n            path=\"/\"\n            name=\"Home\"\n            render={(props) => {\n              return <Layout {...props} />;\n            }}\n          />\n        ) : (\n          <Switch>\n             <Route\n              exact\n              path=\"/home\"\n              name=\"Home Page\"\n              render={(props) => <Home {...props} />}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              name=\"Login Page\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              name=\"Register Page\"\n              render={(props) => <Register {...props} />}\n            />\n            <Route\n              exact\n              path=\"/reset\"\n              name=\"Reset Page\"\n              render={(props) => <Reset {...props} />}\n            />\n            {this.state.redirect === true ? <Redirect to=\"/home\" /> : null}\n          </Switch>\n        )}\n      </React.Suspense>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    isAuthintacted: state.auth.token != null,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    checkSession: () => dispatch(actions.authCheckState()),\n    setPath: (path) => dispatch(actions.setReirectRoute(path)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  redirect: false,\r\n  message: null,\r\n  userInfo: null,\r\n  pathCallback:null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.AUTH_START:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    case actions.AUTH_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n        redirect: false,\r\n      };\r\n    case actions.AUTH_RESET_STATE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        redirect: false,\r\n        message: null,\r\n      };\r\n    case actions.AUTH_SIGINUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        redirect: true,\r\n        message: action.message,\r\n      };\r\n    case actions.AUTH_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        token: action.token,\r\n        userid: action.userId,\r\n      };\r\n    case actions.AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        userId: null,\r\n      };\r\n    case actions.CHECK_USER:\r\n      return {\r\n        ...state,\r\n        userInfo: action.user,\r\n      };\r\n    case actions.SET_PATH:\r\n      return {\r\n        ...state,\r\n        pathCallback: action.path,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authinticationReducer from \"./Store/reducers/authintication\";\nimport \"react-widgets/styles.css\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  auth: authinticationReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}