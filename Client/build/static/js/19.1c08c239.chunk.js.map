{"version":3,"sources":["Containers/Dashboard/index.js"],"names":["index","state","line","data","pie","options","scales","yAxes","ticks","beginAtZero","populateLineChart","Axios","post","headers","Authorization","props","token","then","res","console","log","results","setState","prev","labels","map","item","month_name","datasets","label","total","fill","backgroundColor","borderColor","catch","err","error","populatePieChart","shift_name","bgcolor","borderWidth","a","this","md","height","style","paddingTop","maintainAspectRatio","className","Component","connect","auth"],"mappings":"qTAOMA,E,4MACJC,MAAQ,CACNC,KAAM,CAAEC,KAAM,IACdC,IAAI,GACJC,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,Q,EAiBzBC,kBAAoB,WAClBC,IAAMC,KAAK,gCAAiC,KAAM,CAChDC,QAAS,CACPC,cAAe,UAAY,EAAKC,MAAMC,SAGvCC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIf,KAAKkB,SACrB,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEErB,KAAM,CACJsB,OAAQN,EAAIf,KAAKkB,QAAQI,KAAI,SAACC,GAAD,OAAUA,EAAKC,cAC5CC,SAAU,CACR,CACEC,MAAO,kCACP1B,KAAMe,EAAIf,KAAKkB,QAAQI,KAAI,SAACC,GAAD,OAAUA,EAAKI,SAC1CC,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,qCAOxBC,OAAM,SAACC,GAAD,OAAS,EAAKb,SAAS,CAAEc,OAAO,Q,EAG3CC,iBAAmB,WACjB1B,IAAMC,KAAK,8BAA+B,KAAM,CAC5CC,QAAS,CACPC,cAAe,UAAY,EAAKC,MAAMC,SAGvCC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIf,KAAKkB,SACrB,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEnB,IAAI,CACFoB,OAAQN,EAAIf,KAAKkB,QAAQI,KAAI,SAAAC,GAAI,OAAIA,EAAKY,cAC1CV,SAAU,CACR,CACEC,MAAO,oBACP1B,KAAKe,EAAIf,KAAKkB,QAAQI,KAAI,SAAAC,GAAI,OAAIA,EAAKI,SACvCE,gBAAiBd,EAAIf,KAAKkB,QAAQI,KAAI,SAAAC,GAAI,OAAIA,EAAKa,WACnDN,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEFO,YAAa,aAOxBN,OAAM,SAACC,GAAD,OAAS,EAAKb,SAAS,CAAEc,OAAO,Q,8FAvE7C,sBAAAK,EAAA,+EAEUC,KAAKhC,oBAFf,uBAGUgC,KAAKL,mBAHf,uDAKIlB,QAAQC,IAAR,MALJ,yD,0EA0EA,WAEE,OADAD,QAAQC,IAAIsB,KAAKzC,OAEf,qCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAK0C,GAAI,GAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACExC,KAAMuC,KAAKzC,MAAMC,KACjB0C,OAAQ,GACRvC,QAASqC,KAAKzC,MAAMI,kBAM9B,eAAC,IAAD,CAAKwC,MAAO,CAAEC,WAAY,MAA1B,UACE,cAAC,IAAD,CAAKH,GAAI,EAAT,SACE,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKxC,KAAMuC,KAAKzC,MAAMG,IAAMwC,OAAQ,IAAKvC,QAAS,CAAE0C,qBAAqB,WAInF,cAAC,IAAD,CAAMJ,GAAI,EAAV,SACA,eAAC,IAAD,WACM,eAAC,IAAD,WACI,cAAC,IAAD,IADJ,oBAGA,cAAC,IAAD,UACI,qBAAKK,UAAU,cAAf,gE,GA1HAC,aA0ILC,uBANO,SAACjD,GACrB,MAAO,CACLe,MAAOf,EAAMkD,KAAKnC,SAIkB,KAAzBkC,CAA+BlD","file":"static/js/19.1c08c239.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, CardBody, Card , CardHeader} from \"reactstrap\";\r\nimport { Line , Pie} from \"react-chartjs-2\";\r\nimport Axios from \"../../hoc/Axios\";\r\nimport { connect } from \"react-redux\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport \"./style.css\";\r\nclass index extends Component {\r\n  state = {\r\n    line: { data: [] },\r\n    pie:{},\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      await this.populateLineChart();\r\n      await this.populatePieChart();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  populateLineChart = () => {\r\n    Axios.post(\"/settings/work-force-analysis\", null, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.props.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.results);\r\n        this.setState((prev) => {\r\n          return {\r\n            ...prev,\r\n            line: {\r\n              labels: res.data.results.map((item) => item.month_name),\r\n              datasets: [\r\n                {\r\n                  label: \"Work Force Availability (Hours)\",\r\n                  data: res.data.results.map((item) => item.total),\r\n                  fill: false,\r\n                  backgroundColor: \"rgb(255, 99, 132)\",\r\n                  borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        });\r\n      })\r\n      .catch((err) => this.setState({ error: true }));\r\n  };\r\n\r\n  populatePieChart = () => {\r\n    Axios.post(\"/settings/work-force-shifts\", null, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.props.token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.results);\r\n          this.setState((prev) => {\r\n            return {\r\n              ...prev,\r\n              pie:{\r\n                labels: res.data.results.map(item => item.shift_name),\r\n                datasets: [\r\n                  {\r\n                    label: 'Shifts Allocation',\r\n                    data:res.data.results.map(item => item.total) ,\r\n                    backgroundColor: res.data.results.map(item => item.bgcolor),\r\n                    borderColor: [\r\n                      'rgba(255, 99, 132, 1)',\r\n                      'rgba(54, 162, 235, 1)',\r\n                      'rgba(255, 206, 86, 1)',\r\n                      'rgba(75, 192, 192, 1)',\r\n                      'rgba(153, 102, 255, 1)',\r\n                      'rgba(255, 159, 64, 1)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                  },\r\n                ],\r\n              }\r\n            };\r\n          });\r\n        })\r\n        .catch((err) => this.setState({ error: true }));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <Line\r\n                  data={this.state.line}\r\n                  height={50}\r\n                  options={this.state.options}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ paddingTop: \"1%\" }}>\r\n          <Col md={6} >\r\n            <Card>\r\n                <CardBody>\r\n                    <Pie data={this.state.pie}  height={500} options={{ maintainAspectRatio: false }} />\r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col  md={6} >\r\n          <Card>\r\n                <CardHeader>\r\n                    <FeedbackIcon/> Announcements\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <div className=\"text-center\">Your are caught up ! ðŸŽ‰</div>\r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(index);\r\n"],"sourceRoot":""}