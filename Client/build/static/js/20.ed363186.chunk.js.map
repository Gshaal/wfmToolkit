{"version":3,"sources":["Containers/Schduler/Calender.js"],"names":["Calender","state","loading","calender","scheduler","shifts","edit","selectedCell","setEdit","cell","setState","prev","handleUpdate","event","payload","shift_id","target","value","scheduler_id","alert","Axios","post","headers","Authorization","props","token","then","res","updateCell","data","results","catch","err","error","cellIndex","findIndex","item","cloneData","console","log","populateEditMenu","selected","type","className","onKeyUp","e","onChange","defaultValue","map","shift_name","populateCalenderBody","fullname","filter","index","self","indexOf","employee","calenderData","sort","a","b","Date","datestamp","start_time","moment","format","end_time","requestedPto","style","backgroundColor","shift_color","backgroundImage","onDoubleClick","shift_code","paddingTop","color","query","queryString","parse","this","location","search","team","split","openSocket","on","window","addEventListener","code","sm","fontSize","cursor","bordered","responsive","day_name","day_number","Component","connect","auth"],"mappings":"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","file":"static/js/20.ed363186.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"../../hoc/Axios\";\r\nimport openSocket from \"socket.io-client\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport \"./style.css\";\r\nimport moment from \"moment\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nclass Calender extends Component {\r\n  state = {\r\n    loading: true,\r\n    calender: [],\r\n    scheduler: [],\r\n    shifts: [],\r\n    edit: false,\r\n    selectedCell: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const query = queryString.parse(this.props.location.search);\r\n    const payload = {\r\n      ...query,\r\n      team: query.team.split(\",\"),\r\n    };\r\n    Axios.post(\"/schduler/search\", payload, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.props.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        this.setState((prev) => {\r\n          return {\r\n            ...prev,\r\n            calender: res.data.calender,\r\n            scheduler: res.data.scheduler,\r\n            shifts: res.data.shifts,\r\n            loading: false,\r\n          };\r\n        });\r\n      })\r\n      .catch((err) => this.setState({ error: true }));\r\n\r\n    const socket = openSocket(\"https://wfm-toolkit.herokuapp.com\");\r\n    socket.on(\"update-cell\", (data) => {\r\n      console.log(\"live data in...\");\r\n      this.updateCell(data);\r\n    });\r\n\r\n    window.addEventListener(\"keyup\", (e) => {\r\n      console.log(e);\r\n      if (e.code === \"Escape\") {\r\n        this.setState((prev) => {\r\n          return {\r\n            ...prev,\r\n            edit: false,\r\n            selectedCell: null,\r\n          };\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setEdit = (cell) => {\r\n    this.setState((prev) => {\r\n      return {\r\n        ...prev,\r\n        edit: true,\r\n        selectedCell: cell,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleUpdate = (event) => {\r\n    const payload = {\r\n      shift_id: event.target.value,\r\n      scheduler_id: this.state.selectedCell,\r\n    };\r\n\r\n    if (payload.shift_id === \"custom\") {\r\n      alert();\r\n    } else {\r\n      Axios.post(\"/schduler/update\", payload, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.props.token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          this.updateCell(res.data.results);\r\n        })\r\n        .catch((err) => this.setState({ error: true }));\r\n    }\r\n  };\r\n\r\n  updateCell = (data) => {\r\n    let cellIndex = this.state.scheduler.findIndex(\r\n      (item) => item.scheduler_id === data[0].scheduler_id\r\n    );\r\n    if (cellIndex > -1) {\r\n      let cloneData = [...this.state.scheduler];\r\n      cloneData[cellIndex] = data[0];\r\n\r\n      console.log(\"updating cell...\");\r\n\r\n      this.setState((prev) => {\r\n        return {\r\n          ...prev,\r\n          scheduler: cloneData,\r\n          edit: false,\r\n          selectedCell: null,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  populateEditMenu = (selected) => (\r\n    <Input\r\n      type=\"select\"\r\n      className=\"shift-menu\"\r\n      onKeyUp={(e) => console.log(e)}\r\n      onChange={(e) => this.handleUpdate(e)}\r\n    >\r\n      <option defaultValue={selected}>{selected}</option>\r\n      {this.state.shifts.map(\r\n        (item) =>\r\n          item.shift_name !== selected && (\r\n            <option key={item.shift_id} value={item.shift_id}>\r\n              {item.shift_name}\r\n            </option>\r\n          )\r\n      )}\r\n      {/* <option value=\"custom\">Create Shift</option> */}\r\n    </Input>\r\n  );\r\n\r\n  populateCalenderBody = () => {\r\n    let empName = this.state.scheduler\r\n      .map((item) => item.fullname)\r\n      .filter((value, index, self) => self.indexOf(value) === index);\r\n    let tableBody = empName.map((employee, index) => {\r\n      let calenderData = this.state.scheduler.filter(\r\n        (item) => item.fullname === employee\r\n      ).sort((a,b)=> new Date(a.datestamp) - new Date(b.datestamp));\r\n      return (\r\n        <tr key={index}>\r\n          <th className=\"text-center\">{employee}</th>\r\n          {calenderData.map((item, index) => (\r\n            <td\r\n              data-tip={`${\r\n                item.start_time !== null\r\n                  ? moment(item.start_time).format(\"LT\")\r\n                  : \"No time Assigned\"\r\n              }${\r\n                item.end_time !== null\r\n                  ? `-${moment(item.end_time).format(\"LT\")} ${\r\n                      item.requestedPto ? \"Disabled\" : \"\"\r\n                    }`\r\n                  : \"\"\r\n              }`}\r\n              className=\"text-center\"\r\n              style={{\r\n                backgroundColor: item.shift_color,\r\n                backgroundImage: item.requestedPto\r\n                  ? \"linear-gradient(to bottom right,  transparent calc(50% - 1px), black, transparent calc(50% + 1px))\"\r\n                  : \"\",\r\n              }}\r\n              key={index}\r\n              onDoubleClick={() => this.setEdit(item.scheduler_id)}\r\n            >\r\n              {item.scheduler_id === this.state.selectedCell &&\r\n              !item.requestedPto\r\n                ? this.populateEditMenu(item.shift_name)\r\n                : item.shift_code}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return tableBody;\r\n  };\r\n\r\n  loading = () => (\r\n    <Row className=\"text-center\" style={{ paddingTop: \"20%\" }}>\r\n      <div>\r\n        <Spinner type=\"grow\" color=\"primary\" />\r\n        <Spinner type=\"grow\" color=\"secondary\" />\r\n        <Spinner type=\"grow\" color=\"success\" />\r\n        <Spinner type=\"grow\" color=\"danger\" />\r\n        <Spinner type=\"grow\" color=\"warning\" />\r\n        <Spinner type=\"grow\" color=\"info\" />\r\n        <Spinner type=\"grow\" color=\"light\" />\r\n        <Spinner type=\"grow\" color=\"dark\" />\r\n      </div>\r\n    </Row>\r\n  );\r\n\r\n  render() {\r\n    if (this.state.loading) return this.loading();\r\n    return (\r\n      <Fragment>\r\n        <ReactTooltip />\r\n        <div style={{ paddingTop: \"1.5rem\" }}>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <HelpIcon fontSize=\"small\" data-tip=\"Double click on cell to edit, press ESC to exit edit mode\" style={{ cursor: \"pointer\" }} />{\" \"}\r\n                  <CloudDownloadIcon\r\n                    fontSize=\"small\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Table bordered responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th></th>\r\n                        {this.state.calender.map((item, index) =>\r\n                          item.day_name === \"Sat\" || item.day_name === \"Sun\" ? (\r\n                            <th\r\n                              className=\"text-center\"\r\n                              style={{ backgroundColor: \"#a6a6a6\" }}\r\n                              key={index}\r\n                            >\r\n                              {item.day_name}\r\n                            </th>\r\n                          ) : (\r\n                            <th className=\"text-center\" key={index}>\r\n                              {item.day_name}\r\n                            </th>\r\n                          )\r\n                        )}\r\n                      </tr>\r\n                      <tr>\r\n                        <th className=\"text-center\">Employee Name</th>\r\n                        {this.state.calender.map((item, index) =>\r\n                          item.day_name === \"Sat\" || item.day_name === \"Sun\" ? (\r\n                            <th\r\n                              className=\"text-center\"\r\n                              style={{ backgroundColor: \"#a6a6a6\" }}\r\n                              key={index}\r\n                            >\r\n                              {item.day_number}\r\n                            </th>\r\n                          ) : (\r\n                            <th className=\"text-center\" key={index}>\r\n                              {item.day_number}\r\n                            </th>\r\n                          )\r\n                        )}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{this.populateCalenderBody()}</tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Calender);\r\n"],"sourceRoot":""}